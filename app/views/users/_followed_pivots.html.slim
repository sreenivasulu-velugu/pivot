li.item
	.pic= user_image p.user, 60
	.item_content
		= link_user p.user, :class => 'fb'
		= beautify_params 'Title', p.title, 50
		= p.content
		br
		br
		- if p.doc_file.inspect
			= link_to "Doc File", open_doc_url(p.doc_file), :target =>"_blank",:title =>"Relevance: #{p.doc_relevance} and Privacy: #{p.doc_privacy}", :class =>'btn '
		- if p.faq.inspect
			= link_to "FAQ", open_doc_url(p.faq), :target =>"_blank",:title =>"Relevance: #{p.faq_relevance} and Privacy: #{p.faq_privacy}", :class =>'btn '
		- if !p.link_url.blank?
			= link_to "Shared URL", p.link_url,:target =>"_blank",:title =>"Relevance: #{p.link_url_relevance} and Privacy: #{p.link_url_privacy}", :class =>'btn '
		
		- if !p.link_url.blank?
			= link_to image_tag('link.png') +'Shared URL', p.link_url,:target =>"_blank", :class =>'btn'
	
	.item_links
		= link_to image_tag('open_post.png') +"Open", post_path(p.id), :class => 'fr mrm'
		- if current_user.likes.include?(p.id)
			= link_to image_tag('like.png') +"Unlike", unlike_post_user_path(p.id), :class => 'fr mrm'
		- else
			= link_to image_tag('like.png') +"Like", like_post_user_path(p.id), :class => 'fr mrm'
		- if current_user == p.user
			= link_to image_tag('delete.png'), post_path(p.id), :class => 'fr mrm'
		= link_to image_tag('add_comment.png') +"Comments", '#', :class => "view_comments fr mrm", :post_id => "#{p.id}"
		- if current_user.following_pivots.include?(p.id)
			= link_to "Unfollow", unfollow_pivot_user_path(p.id), :class => 'fr mrm'
		- else
			= link_to "Follow", follow_pivot_user_path(p.id), :class => 'fr mrm'


	.clearfix

ul class="item_children hide" id="comments_#{p.id}"
	- if p.comments.size > 0
		li 
			h4.fl Comments
			= link_to 'Hide', '#', :class => 'hide_comments fr mrm', :post_id => "#{p.id}"
			.clearfix

			- for comment in p.comments.order_by([:created_at,:desc])
				li
					.pic= user_image comment.user, 40
					.item_content= comment.content
					span.light_text.fr= time_ago_in_words(comment.created_at)
					.clearfix
	li.left_form id="comments_head"
		= render :partial => 'comments/comment', :locals => { :p => p }